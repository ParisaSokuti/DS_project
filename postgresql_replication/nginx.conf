events {
    worker_connections 1024;
}

http {
    # Upstream for game servers with fault tolerance
    upstream hokm_game_servers {
        least_conn;
        server 127.0.0.1:8765 max_fails=3 fail_timeout=30s;
        server 127.0.0.1:8766 max_fails=3 fail_timeout=30s backup;
    }
    
    # Upstream for PostgreSQL read operations
    upstream postgres_read {
        server 127.0.0.1:5432 max_fails=2 fail_timeout=15s;
        server 127.0.0.1:5433 max_fails=2 fail_timeout=15s backup;
    }
    
    # Health check endpoint
    server {
        listen 8080;
        server_name localhost;
        
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        location /db-health {
            # Proxy to a health check service
            proxy_pass http://postgres_read/health;
            proxy_connect_timeout 2s;
            proxy_timeout 5s;
        }
        
        location / {
            return 200 "Hokm Game Load Balancer - Fault Tolerance Demo\n";
            add_header Content-Type text/plain;
        }
    }
}

# Stream block for WebSocket load balancing
stream {
    # Upstream for WebSocket connections
    upstream websocket_servers {
        least_conn;
        server 127.0.0.1:8765 max_fails=3 fail_timeout=30s;
        server 127.0.0.1:8766 max_fails=3 fail_timeout=30s;
    }
    
    # Load balance WebSocket connections
    server {
        listen 8765;
        proxy_pass websocket_servers;
        proxy_timeout 1s;
        proxy_responses 1;
        proxy_connect_timeout 1s;
    }
}
