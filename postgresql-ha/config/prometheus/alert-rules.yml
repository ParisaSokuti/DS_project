# PostgreSQL HA Alert Rules for Hokm Gaming

groups:
  - name: postgresql-ha-alerts
    rules:
      # Database availability alerts
      - alert: PostgreSQLPrimaryDown
        expr: up{job=~"postgresql-primary"} == 0
        for: 30s
        labels:
          severity: critical
          service: postgresql
          component: primary
        annotations:
          summary: "PostgreSQL primary database is down"
          description: "PostgreSQL primary instance has been down for more than 30 seconds"
          runbook_url: "https://wiki.company.com/runbooks/postgresql-primary-down"

      - alert: PostgreSQLReplicaDown
        expr: up{job=~"postgresql-replica.*"} == 0
        for: 2m
        labels:
          severity: warning
          service: postgresql
          component: replica
        annotations:
          summary: "PostgreSQL replica database is down"
          description: "PostgreSQL replica {{ $labels.instance }} has been down for more than 2 minutes"

      # Replication lag alerts
      - alert: PostgreSQLReplicationLagHigh
        expr: pg_replication_lag_seconds > 10
        for: 1m
        labels:
          severity: warning
          service: postgresql
          component: replication
        annotations:
          summary: "PostgreSQL replication lag is high"
          description: "Replication lag on {{ $labels.instance }} is {{ $value }} seconds"

      - alert: PostgreSQLReplicationLagCritical
        expr: pg_replication_lag_seconds > 30
        for: 30s
        labels:
          severity: critical
          service: postgresql
          component: replication
        annotations:
          summary: "PostgreSQL replication lag is critical"
          description: "Replication lag on {{ $labels.instance }} is {{ $value }} seconds"

      # Connection alerts
      - alert: PostgreSQLConnectionsHigh
        expr: pg_stat_database_numbackends / pg_settings_max_connections > 0.8
        for: 5m
        labels:
          severity: warning
          service: postgresql
          component: connections
        annotations:
          summary: "PostgreSQL connections usage is high"
          description: "{{ $labels.instance }} has {{ $value | humanizePercentage }} of max connections in use"

      - alert: PostgreSQLConnectionsExhausted
        expr: pg_stat_database_numbackends / pg_settings_max_connections > 0.95
        for: 1m
        labels:
          severity: critical
          service: postgresql
          component: connections
        annotations:
          summary: "PostgreSQL connections nearly exhausted"
          description: "{{ $labels.instance }} has {{ $value | humanizePercentage }} of max connections in use"

      # Performance alerts
      - alert: PostgreSQLSlowQueries
        expr: rate(pg_stat_database_tup_returned[5m]) / rate(pg_stat_database_tup_fetched[5m]) < 0.1
        for: 10m
        labels:
          severity: warning
          service: postgresql
          component: performance
        annotations:
          summary: "PostgreSQL slow queries detected"
          description: "Query efficiency on {{ $labels.instance }} is poor ({{ $value | humanizePercentage }})"

      - alert: PostgreSQLDeadlocks
        expr: rate(pg_stat_database_deadlocks[5m]) > 0.1
        for: 5m
        labels:
          severity: warning
          service: postgresql
          component: performance
        annotations:
          summary: "PostgreSQL deadlocks detected"
          description: "Deadlock rate on {{ $labels.instance }} is {{ $value }} per second"

      # Disk and WAL alerts
      - alert: PostgreSQLWALFilesHigh
        expr: pg_stat_wal_files > 100
        for: 5m
        labels:
          severity: warning
          service: postgresql
          component: wal
        annotations:
          summary: "PostgreSQL WAL files accumulating"
          description: "{{ $labels.instance }} has {{ $value }} WAL files"

      - alert: PostgreSQLDiskSpaceLow
        expr: (pg_database_size_bytes / (1024^3)) > 8
        for: 5m
        labels:
          severity: warning
          service: postgresql
          component: storage
        annotations:
          summary: "PostgreSQL database size growing"
          description: "Database size on {{ $labels.instance }} is {{ $value | humanize }}GB"

  - name: patroni-alerts
    rules:
      # Patroni cluster alerts
      - alert: PatroniClusterUnhealthy
        expr: patroni_cluster_unlocked == 1
        for: 1m
        labels:
          severity: critical
          service: patroni
          component: cluster
        annotations:
          summary: "Patroni cluster is unlocked"
          description: "Patroni cluster is in an unlocked state"

      - alert: PatroniFailoverInProgress
        expr: patroni_pending_restart == 1
        for: 30s
        labels:
          severity: warning
          service: patroni
          component: failover
        annotations:
          summary: "Patroni failover in progress"
          description: "Patroni is performing a failover or restart"

      - alert: PatroniLeaderElection
        expr: changes(patroni_master[5m]) > 0
        for: 30s
        labels:
          severity: warning
          service: patroni
          component: leader
        annotations:
          summary: "Patroni leader election occurred"
          description: "Leader election happened in the last 5 minutes"

  - name: haproxy-alerts
    rules:
      # HAProxy alerts
      - alert: HAProxyDown
        expr: up{job="haproxy"} == 0
        for: 1m
        labels:
          severity: critical
          service: haproxy
          component: proxy
        annotations:
          summary: "HAProxy is down"
          description: "HAProxy load balancer is not responding"

      - alert: HAProxyBackendDown
        expr: haproxy_backend_up == 0
        for: 2m
        labels:
          severity: warning
          service: haproxy
          component: backend
        annotations:
          summary: "HAProxy backend is down"
          description: "HAProxy backend {{ $labels.proxy }} is down"

  - name: gaming-specific-alerts
    rules:
      # Gaming performance alerts
      - alert: HighLatencyQueries
        expr: pg_stat_activity_max_tx_duration > 5
        for: 2m
        labels:
          severity: warning
          service: postgresql
          component: gaming
        annotations:
          summary: "High latency queries detected"
          description: "Queries on {{ $labels.instance }} taking longer than 5 seconds"

      - alert: ActiveGamingSessions
        expr: count(pg_stat_activity{application_name=~"hokm.*"}) > 500
        for: 5m
        labels:
          severity: info
          service: postgresql
          component: gaming
        annotations:
          summary: "High number of active gaming sessions"
          description: "{{ $value }} active gaming sessions detected"

      - alert: GameDatabaseConnectionsHigh
        expr: pg_stat_database_numbackends{datname="hokm_game"} > 150
        for: 5m
        labels:
          severity: warning
          service: postgresql
          component: gaming
        annotations:
          summary: "High connections to game database"
          description: "{{ $value }} connections to hokm_game database"
