# Patroni Configuration for PostgreSQL Primary Node
# High Availability setup for Hokm Game Server

scope: hokm_cluster
namespace: /hokm/
name: postgres_primary

restapi:
  listen: 0.0.0.0:8008
  connect_address: postgres-primary:8008

etcd:
  hosts: etcd1:2379,etcd2:2379,etcd3:2379

bootstrap:
  # Custom bootstrap configuration
  dcs:
    ttl: 30
    loop_wait: 10
    retry_timeout: 30
    maximum_lag_on_failover: 1048576  # 1MB
    master_start_timeout: 300
    synchronous_mode: true
    synchronous_mode_strict: false
    synchronous_node_count: 1
    
    postgresql:
      use_pg_rewind: true
      use_slots: true
      
      parameters:
        # Basic connection settings
        max_connections: 200
        shared_buffers: 256MB
        effective_cache_size: 1GB
        work_mem: 4MB
        maintenance_work_mem: 64MB
        
        # WAL settings for replication
        wal_level: replica
        max_wal_senders: 5
        max_replication_slots: 5
        wal_keep_size: 1024MB
        wal_log_hints: true
        
        # Checkpoint settings
        checkpoint_completion_target: 0.9
        wal_buffers: 16MB
        
        # Query planner settings (optimized for gaming)
        random_page_cost: 1.1
        effective_io_concurrency: 200
        default_statistics_target: 100
        
        # Logging settings
        log_destination: stderr
        log_line_prefix: '%t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h '
        log_checkpoints: true
        log_connections: true
        log_disconnections: true
        log_lock_waits: true
        log_temp_files: 10MB
        log_autovacuum_min_duration: 0
        log_error_verbosity: default
        
        # Performance settings for gaming workload
        synchronous_commit: on
        wal_compression: on
        wal_writer_delay: 200ms
        commit_delay: 0
        commit_siblings: 5
        
        # Hot standby settings
        hot_standby: on
        max_standby_streaming_delay: 30s
        max_standby_archive_delay: 60s
        hot_standby_feedback: on
        
        # Autovacuum settings (tuned for gaming)
        autovacuum_max_workers: 3
        autovacuum_naptime: 20s
        autovacuum_vacuum_threshold: 50
        autovacuum_analyze_threshold: 50
        autovacuum_vacuum_scale_factor: 0.1
        autovacuum_analyze_scale_factor: 0.05
        
        # Archive settings
        archive_mode: on
        archive_command: 'test ! -f /var/lib/postgresql/wal_archive/%f && cp %p /var/lib/postgresql/wal_archive/%f'
        archive_timeout: 300s
        
        # Security settings
        ssl: off  # Enable in production with proper certificates
        password_encryption: scram-sha-256
        
      recovery_conf:
        restore_command: 'cp /var/lib/postgresql/wal_archive/%f %p'

  initdb:
    - encoding: UTF8
    - data-checksums
    - locale: en_US.UTF-8

  pg_hba:
    - host replication replicator 172.20.0.0/16 md5
    - host all all 172.20.0.0/16 md5
    - host all all 127.0.0.1/32 md5
    - local all all peer

  users:
    admin:
      password: admin_password_change_me
      options:
        - createrole
        - createdb
    replicator:
      password: replication_password_change_me
      options:
        - replication

postgresql:
  listen: 0.0.0.0:5432
  connect_address: postgres-primary:5432
  data_dir: /var/lib/postgresql/data/pgdata
  bin_dir: /usr/local/bin
  
  authentication:
    replication:
      username: replicator
      password: replication_password_change_me
    superuser:
      username: postgres
      password: secure_password_change_me
    rewind:
      username: replicator
      password: replication_password_change_me

  # Custom script hooks
  callbacks:
    on_start: /scripts/on_start.sh
    on_stop: /scripts/on_stop.sh
    on_restart: /scripts/on_restart.sh
    on_reload: /scripts/on_reload.sh
    on_role_change: /scripts/on_role_change.sh

  # Backup configuration
  create_replica_methods:
    - basebackup

  basebackup:
    checkpoint: fast
    max-rate: 100M
    verbose: true

tags:
  nofailover: false
  noloadbalance: false
  clonefrom: false
  nosync: false
  
# Gaming-specific settings
gaming:
  priority: 100  # Higher priority for primary
  location: primary_datacenter
  
# Monitoring and alerting
monitoring:
  enabled: true
  port: 8008
  
# Log configuration
log:
  level: INFO
  format: '%(asctime)s %(levelname)s: %(message)s'
